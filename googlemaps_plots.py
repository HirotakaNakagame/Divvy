import gmplotimport googlemapsfrom geopy.geocoders import Nominatimdef func():	divvy_info_extract = False	startAddresses = []	stopAddresses = []		API_KEY = ***		gmaps = googlemaps.Client(key = API_KEY)	gmap_start_scatter = gmplot.GoogleMapPlotter(41.836944,  -87.684722, 13)	gmap_start_heat = gmplot.GoogleMapPlotter(41.836944,  -87.684722, 13)	gmap_stop_scatter = gmplot.GoogleMapPlotter(41.836944,  -87.684722, 13)	gmap_stop_heat = gmplot.GoogleMapPlotter(41.836944,  -87.684722, 13)	geolocator = Nominatim()		start_address_count = []	stop_address_count = []		addresses = {}	list_address = []		f = open('Divvy_Stations_address_converted_to_lat_lng.txt', 'r')	for j in f:		temp = j.split('\t')		addresses[temp[0]] = [float(temp[1]), float(temp[2])]		list_address.append( temp[0] )	f.close()		for j in range(len(list_address)):		start_address_count.append( 0 )		stop_address_count.append( 0 )		start_latitudes = []	start_longitudes = []	stop_latitudes = []	stop_longitudes = []		start_latitudes_higher_than_average = []	start_longitudes_higher_than_average = []	start_latitudes_lower_than_average = []	start_longitudes_lower_than_average = []		stop_latitudes_higher_than_average = []	stop_longitudes_higher_than_average = []	stop_latitudes_lower_than_average = []	stop_longitudes_lower_than_average = []		csv_file_names = []	csv_file_names.append( "Divvy_Trips_2013.csv" )#75,9788	csv_file_names.append( "Divvy_Trips_2014_Q1Q2.csv" )#905,699	csv_file_names.append( "Divvy_Trips_2014-Q3-07.csv" )#410,340	csv_file_names.append( "Divvy_Trips_2014-Q3-0809.csv" )#700,630	csv_file_names.append( "Divvy_Trips_2014-Q4.csv" )#437,965	csv_file_names.append( "Divvy_Trips_2015-Q1.csv" )#202,349	csv_file_names.append( "Divvy_Trips_2015-Q2.csv" )#893,890	csv_file_names.append( "Divvy_Trips_2015_07.csv" )#533,711	csv_file_names.append( "Divvy_Trips_2015_08.csv" )#495,029	csv_file_names.append( "Divvy_Trips_2015_09.csv" )#427,095	csv_file_names.append( "Divvy_Trips_2015_Q4.csv" )#631,365	csv_file_names.append( "Divvy_Trips_2016_Q1.csv" )#396,913	csv_file_names.append( "Divvy_Trips_2016_04.csv" )#231,635	csv_file_names.append( "Divvy_Trips_2016_05.csv" )#363,319	csv_file_names.append( "Divvy_Trips_2016_06.csv" )#477,873	csv_file_names.append( "Divvy_Trips_2016_Q3.csv" )#1,441,811	csv_file_names.append( "Divvy_Trips_2016_Q4.csv" )#683,832	csv_file_names.append( "Divvy_Trips_2017_Q1.csv" )#431,691	csv_file_names.append( "Divvy_Trips_2017_Q2.csv" )#1,119,814	num_keyerror = 0	list_keyerror = []		for file in csv_file_names: 		print (file)		count = 0		total_count = 0		with open(file, 'r') as f:			for line in f:				count += 1				if count > 1:					total_count += 1					startAddress = line.split(',')[6][1:-1]					stopAddress = line.split(',')[8][1:-1]					try:						start_latitudes.append( float( addresses[startAddress][0] ) )						start_longitudes.append( float( addresses[startAddress][1] ) )					except KeyError:						location = geolocator.geocode(startAddress)						f = open('Divvy_Stations_address_converted_to_lat_lng.txt', 'a+')						f.write(startAddress)						f.write('\t')						f.write( str( (location.latitude, location.longitude)[0] ) )						f.write('\t')						f.write( str( (location.latitude, location.longitude)[1] ) )						f.write('\n')						f.close()						addresses[startAddress] = [float(location.latitude), float(location.longitude)]						list_address.append( startAddress )						start_address_count.append( 0 )						start_latitudes.append( float( addresses[startAddress][0] ) )						start_longitudes.append( float( addresses[startAddress][1] ) )					try:						start_address_count[list_address.index(startAddress)] += 1					except ValueError:						location = geolocator.geocode(startAddress + ', Chicago, IL')						f = open('Divvy_Stations_address_converted_to_lat_lng.txt', 'a+')						f.write(startAddress)						f.write('\t')						f.write( str( (location.latitude, location.longitude)[0] ) )						f.write('\t')						f.write( str( (location.latitude, location.longitude)[1] ) )						f.write('\n')						f.close()						addresses[startAddress] = [float(location.latitude), float(location.longitude)]						list_address.append( startAddress )						start_address_count.append( 0 )						start_address_count[list_address.index(startAddress)] += 1					try:							stop_latitudes.append( float( addresses[stopAddress][0] ) )						stop_longitudes.append( float( addresses[stopAddress][1] ) )											except KeyError:						location = geolocator.geocode(stopAddress + ', Chicago, IL')						f = open('Divvy_Stations_address_converted_to_lat_lng.txt', 'a+')						f.write(startAddress)						f.write('\t')						f.write( str( (location.latitude, location.longitude)[0] ) )						f.write('\t')						f.write( str( (location.latitude, location.longitude)[1] ) )						f.write('\n')						f.close()						addresses[stopAddress] = [float(location.latitude), float(location.longitude)]						list_address.append( startAddress )						stop_address_count.append( 0 )						stop_latitudes.append( float( addresses[stopAddress][0] ) )						stop_longitudes.append( float( addresses[stopAddress][1] ) )					try:						stop_address_count[list_address.index(startAddress)] += 1					except ValueError:						location = geolocator.geocode(stopAddress + ', Chicago, IL')						f = open('Divvy_Stations_address_converted_to_lat_lng.txt', 'a+')						f.write(startAddress)						f.write('\t')						f.write( str( (location.latitude, location.longitude)[0] ) )						f.write('\t')						f.write( str( (location.latitude, location.longitude)[1] ) )						f.write('\n')						f.close()						addresses[startAddress] = [float(location.latitude), float(location.longitude)]						list_address.append( stopAddress )						stop_address_count.append( 0 )						stop_address_count[list_address.index(stopAddress)] += 1					average = total_count / len(list_address)		for j in range(len(list_address)):		if start_address_count[j] > average:			start_latitudes_higher_than_average.append( float( addresses[list_address[j]][0] ) )				start_longitudes_higher_than_average.append( float( addresses[list_address[j]][1] ) )				stop_latitudes_higher_than_average.append( float( addresses[list_address[j]][0] ) )				stop_longitudes_higher_than_average.append( float( addresses[list_address[j]][1] ) )				else:			start_latitudes_lower_than_average.append( float( addresses[list_address[j]][0] ) )				start_longitudes_lower_than_average.append( float( addresses[list_address[j]][1] ) )				stop_latitudes_lower_than_average.append( float( addresses[list_address[j]][0] ) )				stop_longitudes_lower_than_average.append( float( addresses[list_address[j]][1] ) )								gmap_start_heat.heatmap(start_latitudes, start_longitudes)	gmap_start_heat.draw("divvy_start_heatmap.html")	gmap_stop_heat.heatmap(stop_latitudes, stop_longitudes)	gmap_stop_heat.draw("divvy_stop_heatmap.html")		gmap_start_scatter.scatter(start_latitudes_higher_than_average, start_longitudes_higher_than_average, c = 'r', size=200, marker=False)	gmap_start_scatter.scatter(start_latitudes_lower_than_average, start_longitudes_lower_than_average, c = 'b', size=200, marker=False)	gmap_start_scatter.draw("divvy_start_scatter.html")	gmap_stop_scatter.scatter(stop_latitudes_higher_than_average, stop_longitudes_higher_than_average, c = 'r', size=200, marker=False)	gmap_stop_scatter.scatter(stop_latitudes_lower_than_average, stop_longitudes_lower_than_average, c = 'b', size=200, marker=False)	gmap_stop_scatter.draw("divvy_stop_scatter.html")		func()